plots <- ind$short
path_to_wb <- "~/DLR_Reinermann/Daten/Satdata/tables/Reflectances.xlsx"
wb <- loadWorkbook(path_to_wb)
dates <- as.Date(getSheetNames(path_to_wb))
sort_dates <- sort(dates)
monthly_path <- "~/DLR_Reinermann/Daten/Satdata/tables/maximum_composite.xlsx"
# create an extent file from study region
xmin <- min(ind$ul_east - 500)
xmax <- max(ind$ul_east + 500)
ymax <- max(ind$ul_north + 500)
ymin <- min(ind$ul_north - 500)
ext <- extent(xmin, xmax, ymin, ymax)
4+4
library(devtools)
plot(seq(100))
c("A", 1:100)
getwd()
temp_min <- c(-2,-2,0,3,7,10,12,12,8,5,1,-1)
plot(temp_min)
plot(temp_min, pch = 19, cex = 2, col = "green")
lines(lowess(temp_min, f= .2))
library(terra)
library(sf)
install.packages("sf")
library(rnaturalearth)
install.packages("rnaturalearth")
library(geodata)
install.packages("geodata")
library(devtools)
library(terra)
library(sf)
library(rnaturalearth)
library(geodata)
ger <- ne_countries(country="Germany", scale = "medium", returnclass = "sf")
ger <- ne_countries(country="Germany", scale = "medium", returnclass = "sf")
install.packages("rnaturalearthdata")
library(rnaturalearthdata)
ger <- ne_countries(country="Germany", scale = "medium", returnclass = "sf")
plot(ger)
clim <- geodata::worldclim_global(var='tmin', res = 10, download = T, path ='.')
plot(clim)
ger
ger.r <- st_transform(ger, st_crs(clim))
crop(clim, ger.r)
ger_cropped <- crop(clim, ger.r)
plot(ger_cropped)
ger[:,:,1]
ger[,,1]
plot(ger[,,1])
plot(ger_cropped[,,1])
mask(ger_cropped, ger.r)
ger_masked <- mask(ger_cropped, ger.r)
plot(ger_masked)
min(ger_masked[,,1])
min(ger_masked[,,1], na.rm = T)
c(1:12)
for (i in c(1:12)){
min[i] <- min(ger_masked[,,i], na.rm = T)
}
min = rep(NaN, 12)
min
min = rep(NaN, 12)
for (i in c(1:12)){
min[i] <- min(ger_masked[,,i], na.rm = T)
}
min
plot(min)
plot(min, ylab = 'Month')
plot(min, xlab = 'Month', ylab = 'Temperature [°C]')
plot(min, xlab = 'Month', ylab = 'Minimum Temperature [°C]', type = "l")
plot(min, xlab = 'Month', ylab = 'Minimum Temperature [°C]', type = "l")
grid()
ger_cropped <- terra::crop(clim, ger.r) # Crop to Extent
plot(ger_cropped)
ger_masked <- terra::mask(ger_cropped, ger.r) # Mask Raster to Germany
plot(ger_masked)
min = rep(NaN, 12)
for (i in c(1:12)){
min[i] <- min(ger_masked[,,i], na.rm = T)
}
plot(min, xlab = 'Month', ylab = 'Minimum Temperature [°C]', type = "l")
grid()
ger_cropped <- terra::mask(clim, ger.r) # Crop to Extent
plot(ger_cropped)
ger_cropped <- terra::crop(clim, ger.r) # Crop to Extent
ger_masked
climGer_vect <- terra::extract(ger_masked, ger, mean)
climGer_vect
plot(unlist(climGer_vect[,2:13]))
climGer_vect <- terra::extract(ger_masked, ger, min)
climGer_vect <- terra::extract(ger_masked, ger, mean)
climGer_vect
plot(unlist(climGer_vect[,2:13]))
ger <- ne_countries(country="Swizerland", scale = "medium", returnclass = "sf") # get country boarders
ger <- ne_countries(country="Switzerland", scale = "medium", returnclass = "sf") # get country boarders
plot(ger)
clim <- geodata::worldclim_global(var='tmin', res = 10, download = T, path ='.') #get T min data
plot(clim)
ger.r <- st_transform(ger, st_crs(clim))
ger_cropped <- terra::crop(clim, ger.r) # Crop to Extent
plot(ger_cropped)
ger_masked <- terra::mask(ger_cropped, ger.r) # Mask Raster to Germany
plot(ger_masked)
min = rep(NaN, 12)
for (i in c(1:12)){
min[i] <- min(ger_masked[,,i], na.rm = T)
}
plot(min, xlab = 'Month', ylab = 'Minimum Temperature [°C]', type = "l")
grid()
climGer_vect <- terra::extract(ger_masked, ger, mean)
climGer_vect
plot(unlist(climGer_vect[,2:13]))
ger <- ne_countries(country="Switzerland", scale = "medium", returnclass = "sf") # get country boarders
plot(ger)
clim <- geodata::worldclim_global(var='wind', res = 10, download = T, path ='.') #get T min data
# plot(clim)
ger.r <- st_transform(ger, st_crs(clim))
ger_cropped <- terra::crop(clim, ger.r) # Crop to Extent
ger_masked <- terra::mask(ger_cropped, ger.r) # Mask Raster to Germany
plot(ger_masked)
climGer_vect <- terra::extract(ger_masked, ger, mean)
climGer_vect
plot(unlist(climGer_vect[,2:13]))
ger <- ne_countries(country="Switzerland", scale = "small", returnclass = "sf") # get country boarders
plot(ger)
plot(unlist(climGer_vect[,2:13]), type = 'l')
ger <- ne_countries(country="Switzerland", scale = 1000, returnclass = "sf") # get country boarders
plot(ger)
ger <- ne_countries(country="Switzerland", scale = 110, returnclass = "sf") # get country boarders
plot(ger)
ger <- ne_countries(country="Switzerland", scale = 'small', returnclass = "sf") # get country boarders
plot(ger)
ger <- ne_countries(country="Switzerland", scale = 'large', returnclass = "sf") # get country boarders
ger <- ne_countries(country="Switzerland", scale = 'medium', returnclass = "sf") # get country boarders
plot(ger)
library(RCurl)
df_steigerwald <- read.csv("https://raw.githubusercontent.com/wegmann/R_data/master/Steigerwald_sample_points_all_data_subset_withNames.csv")
## GGPLOT
library(ggplot2)
#
ggplot(df_steigerwald, aex(x = L8.ndvi, y=L8.savi))+
geom_point(aes(color = LCname), size = 2)+
facet_grid(. ~ LCname)
#
ggplot(df_steigerwald, aes(x = L8.ndvi, y=L8.savi))+
geom_point(aes(color = LCname), size = 2)+
facet_grid(. ~ LCname)
x11()
ggplot(df_steigerwald, aes(x = L8.ndvi, y=L8.savi))+
geom_point(aes(color = LCname), size = 2)+
facet_grid(. ~ LCname)
getwd()
pdf("Eagle/Intro_to_Programming/Plots/landcover_vs_L8savi_ndvi.pdf", width = 12, height = 4)
ggplot(df_steigerwald, aes(x = L8.ndvi, y=L8.savi))+
geom_point(aes(color = LCname), size = 2)+
facet_grid(. ~ LCname)
dev.off()
g <- ggplot(df_steigerwald, aes(x = L8.ndvi, y=L8.savi))
g + geom_violin()
g + geom_jitter(aes(alpha = SRTM, size = TimeScan.NDVIsd, colour= L8.ndvi))+
geom_boxplot(alpha = .5)
g + geom_jitter(aes(alpha = SRTM, size = TimeScan.NDVIsd, colour= L8.ndvi))+
geom_boxplot(alpha = .5)+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"))
names(df_steigerwald)
head(df_steigerwald$x)
strsplit("Black_sea.gpkg", ".")
str_split("Black_sea.gpkg", ".")
library(stringr)
str_split("Black_sea.gpkg", ".")
str_split("Black_sea.gpkg", '.')
str_split("Black_sea.gpkg", '.', perl = T)
strsplit("Black_sea.gpkg", ".", perl = T)
strsplit("Black_sea.gpkg", ".", fixed = T)
strsplit("Black_sea.gpkg", ".", fixed = T)[[1]][1]
library(sf)
library(ggplot2)
library(RColorBrewer)
setwd("~/Eagle/Intro_to_Programming/ggplot/Data/")
df <- read.csv(file = "P_Data_Extract_From_Gender_Statistics/5fec3b22-d19c-446c-bcf6-b4106e7ee00d_Data.csv")
# Read Shapefile of Africa
africa_shp <- "Africa_countries.gpkg"
africa <- sf::st_read(africa_shp)
df_drugs_fem <- df[df$Series.Code == "SH.HIV.ARTC.FE.ZS",]
df_drugs_fem$Country.Name[!df_drugs_fem$Country.Name %in% africa$NAME_LONG] <-
c("eSwatini", "Democratic Republic of the Congo", "Republic of the Congo", "Egypt", "The Gambia", "Côte d'Ivoire", "São Tomé and Principe")
merged_df_fem <- merge(africa, df_drugs_fem, by.x = "NAME_LONG", by.y = "Country.Name")
df_drugs_fem <- merged_df_fem[c(1, 18:length(merged_df_fem))]
head(df_drugs_fem)
plt_lst <- c()
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
#var <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
c[y-1] <- plt
#assign(var, plt)
}
plt_lst <- list()
plt_lst[1] <- "hellot"
plt_lst <- list()
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
#var <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
plt_lst[y-1] <- plt
#assign(var, plt)
}
warnings()
plt_lst
plt_lst[[1]]
plot(plt_lst[[1]])
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
#plt_lst[y-1] <- plt
assign(v_name, plt)
}
gg_2003
plt_lst[1]
View(plt_lst)
plt_lst[[1]]
df_drugs_fem[[y]]
get_ggplotList <- function(){
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
#plt_lst[y-1] <- plt
assign(v_name, plt)
}
gg_lst <- list(gg_2003, gg_2007, gg_2021)
}
get_ggplotList <- function(){
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
#plt_lst[y-1] <- plt
assign(v_name, plt)
}
gg_lst <- list(gg_2003, gg_2007, gg_2021)
return(gg_lst)
}
gg <- get_ggplotList()
gg[1]
gg <- list()
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
#plt_lst[y-1] <- plt
#assign(v_name, plt)
gg <- list(gg, plt)
}
gg
library(sf)
library(ggplot2)
library(RColorBrewer)
setwd("~/Eagle/Intro_to_Programming/ggplot/Data/")
df <- read.csv(file = "P_Data_Extract_From_Gender_Statistics/5fec3b22-d19c-446c-bcf6-b4106e7ee00d_Data.csv")
# Read Shapefile of Africa
africa_shp <- "Africa_countries.gpkg"
africa <- sf::st_read(africa_shp)
df_drugs_fem <- df[df$Series.Code == "SH.HIV.ARTC.FE.ZS",]
df_drugs_fem$Country.Name[!df_drugs_fem$Country.Name %in% africa$NAME_LONG] <-
c("eSwatini", "Democratic Republic of the Congo", "Republic of the Congo", "Egypt", "The Gambia", "Côte d'Ivoire", "São Tomé and Principe")
merged_df_fem <- merge(africa, df_drugs_fem, by.x = "NAME_LONG", by.y = "Country.Name")
df_drugs_fem <- merged_df_fem[c(1, 18:length(merged_df_fem))]
y =3
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
#plt_lst[y-1] <- plt
assign(v_name, plt)
gg_2004
get_ggplotList <- function(){
gg_lst <- list()
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
assign(v_name, plt)
}
gg_lst[[v_name]] <- plt
return(gg_lst)
}
gg <- get_ggplotList()
gg[[1]]
gg[[2]]
View(gg)
get_ggplotList <- function(){
gg_lst <- list()
for (y in c(2:20)){
y_str <- gsub("X", "", strsplit(colnames(df_drugs_fem)[y], ".", fixed = T)[[1]][1])
#col_n <- paste0("X", y_str, "..YR", y_str, ".")
v_name <- paste0('gg_', y_str)
plt <- ggplot(data = df_drugs_fem$geometry, aes(fill = as.integer(df_drugs_fem[[y]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df_drugs_fem[[y]]))
assign(v_name, plt)
gg_lst[[v_name]] <- plt
}
return(gg_lst)
}
gg <- get_ggplotList()
gg$gg_2003
plot_data <- function(data, column){
y_str <- gsub("X", "", strsplit(column, ".", fixed = T)[[1]][1])
ggplot(data = data, aes(fill = as.integer(column)))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = column))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, data = df_drugs_fem)
my_plots[[1]]
my_plots[[2]]
plot_data <- function(data, column){
y_str <- gsub("X", "", strsplit(column, ".", fixed = T)[[1]][1])
ggplot(data = data, aes(fill = as.integer(data[[column]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = data[[column]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, data = df_drugs_fem)
my_plots[[2]]
my_plots[[3]]
my_plots[[10]]
# function of colnames
plot_data <- function(df, column){
y_str <- gsub("X", "", strsplit(column, ".", fixed = T)[[1]][1])
ggplot(data = df, aes(fill = as.integer(df[[column]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df[[column]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, data = df_drugs_fem)
plot_data <- function(df, column){
y_str <- gsub("X", "", strsplit(column, ".", fixed = T)[[1]][1])
ggplot(data = df, aes(fill = as.integer(df[[column]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df[[column]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, df = df_drugs_fem)
my_plots[[10]]
plot_data <- function(df, year_col){
y_str <- gsub("X", "", strsplit(year_col, ".", fixed = T)[[1]][1])
ggplot(data = df, aes(fill = as.integer(df[[year_col]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df[[year_col]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, df = df_drugs_fem)
my_plots[[10]]
plot_data <- function(df, year_col){
y_str <- gsub("X", "", strsplit(year_col, ".", fixed = T)[[1]][1])
ggplot(data = df, aes(fill = as.integer(.df[[year_col]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df[[year_col]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, df = df_drugs_fem)
my_plots[[10]]
# function of colnames
plot_data <- function(df, year_col){
y_str <- gsub("X", "", strsplit(year_col, ".", fixed = T)[[1]][1])
ggplot(data = df, aes(fill = as.integer(df[[year_col]])))+
geom_sf()+
scale_fill_gradientn(name = 'Precent', colours = brewer.pal(9, 'Blues'), na.value = NA, limits = c(0,100))+
xlab("Longitude")+
ylab("Latitude")+
ggtitle(y_str, subtitle = 'Access to drugs by Females')+
theme(panel.grid.major = element_line(color = gray(.5), linetype = "dashed",
linewidth = 0.5), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.key.width = unit(0.1, "inches"))+
geom_sf_label(aes(label = df[[year_col]]))
}
my_plots <- lapply(colnames(df_drugs_fem), plot_data, df = df_drugs_fem)
my_plots[[10]]
colnames(df_drugs_fem)[2:,]
colnames(df_drugs_fem)[2:length(df_drugs_fem),]
colnames(df_drugs_fem)[,2:length(df_drugs_fem)]
colnames(df_drugs_fem)[2:length(df_drugs_fem)]
my_plots[[20]]
my_plots[[19]]
my_plots[[21]]
colnames(df_drugs_fem)[2:length(df_drugs_fem)]
